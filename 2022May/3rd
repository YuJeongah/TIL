-- DDL
DROP DATABASE IF EXISTS ws_shoppingdb;
CREATE DATABASE ws_shoppingdb;
USE ws_shoppingdb;

DROP TABLE IF EXISTS cart;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS item;
DROP TABLE IF EXISTS cate;
-- customer table 
CREATE TABLE customer(
	uid VARCHAR(20),
    name VARCHAR(20) NOT NULL,
    addr VARCHAR(50) NOT NULL,
    regdate DATE NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT PRIMARY KEY(uid);
ALTER TABLE customer ALTER COLUMN addr SET DEFAULT 'Seoul';

-- cate table 

CREATE TABLE cate(
	cid INT,
    name VARCHAR(20) NOT NULL,
    pid INT
);

ALTER TABLE cate ADD CONSTRAINT PRIMARY KEY(cid);
ALTER TABLE cate ADD CONSTRAINT UNIQUE (name);
-- ALTER TABLE cate ADD CONSTRAINT FOREIGN KEY (pid) REFERENCES cate (pid);


-- item table 

CREATE TABLE item(
	pid INT,
    name VARCHAR(20) NOT NULL,
    price INT NOT NULL,
    cid INT 
);
ALTER TABLE item ADD CONSTRAINT PRIMARY KEY(pid);
ALTER TABLE item  MODIFY pid INT AUTO_INCREMENT;
ALTER TABLE item  AUTO_INCREMENT = 1000;
ALTER TABLE item  ADD CONSTRAINT CHECK (price > 0);

-- ALTER TABLE product ADD CONSTRAINT FOREIGN KEY (cid) REFERENCES cate (cid);


-- cart table

CREATE TABLE cart(
	orderno INT,
    uid VARCHAR(20),
    cid int,
    pid INT,
    chosen int,
    amount int , 
    regdate DATE
);
ALTER TABLE cart ADD CONSTRAINT PRIMARY KEY(orderno);
ALTER TABLE cart MODIFY orderno INT AUTO_INCREMENT;
ALTER TABLE cart AUTO_INCREMENT = 1000;

-- ALTER TABLE cart ADD FOREIGN KEY (uid) REFERENCES customer (uid)
-- ON DELETE CASCADE
-- ON UPDATE CASCADE;

-- ALTER TABLE cart ADD FOREIGN KEY (pid) REFERENCES product (pid);

DML

-- cust data
SELECT * FROM cust;
INSERT INTO cust VALUES ('id01','lee','Busan','2019-03-02');
INSERT INTO cust (id,name,regdate) VALUES ('id02','kim','2020-05-02');

-- cate data
SELECT * FROM cate;
INSERT INTO cate VALUES (10, 'pants', NULL);
INSERT INTO cate VALUES (11, 'short pants', 10);

INSERT INTO cate VALUES (20, 'shirts', NULL);
INSERT INTO cate VALUES (21, 'short shirts', 20);


SELECT * FROM cate c1
INNER JOIN cate c2 ON c1.pid = c2.id;

-- product data
SELECT * FROM product;
INSERT INTO product VALUES 
(NULL, 'levis',10000,curdate(),11);
INSERT INTO product VALUES 
(NULL, 'bang',20000,curdate(),11);
INSERT INTO product VALUES 
(NULL, 'levis',10000,curdate(),21);
INSERT INTO product VALUES 
(NULL, 'bang',20000,curdate(),21);

-- 제품의 정보를 출력 한다.
-- 카테고리 명도 출력 한다.
SELECT * FROM product p
INNER JOIN cate c ON p.cid = c.id;

-- cart data
SELECT * FROM cart;
INSERT INTO cart VALUES (NULL, 'id01',1000,CURDATE());
INSERT INTO cart VALUES (NULL, 'id01',1001,CURDATE());
INSERT INTO cart VALUES (NULL, 'id01',1003,CURDATE());

-- cart 정보 출력 하시오
-- 사용자 이름, 상품 이름 가격, 카테고리 이름
SELECT * FROM cart c
INNER JOIN cust cu ON c.uid = cu.id
INNER JOIN product p ON c.pid = p.id
INNER JOIN cate ca ON ca.id = p.cid;

-- DELETE FROM cart;
-- DELETE FROM cust WHERE id = 'id001';
-- UPDATE cust SET id='id001' WHERE id='id01';
