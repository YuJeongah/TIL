5월 16일

java script

오전수업을 들어가지 못했다. 
java script수업이 한창이었는데, 끝날때 강사님 한마디, "자바스크립트는 내일까지 마무리하고 모레부터는 js query들어가시죠"

네에? 

// js02 
<script>
window.onload =function(){
var h2 = document.querySelector('#hh2');
var num = 100;
var b = true;
var str= '100';
var v; 
<!-- 변수에 아무것도 선언이 되어있지 않을땐, undifined 오류 -->
var type = typeof(str);
h2.innerHTML = type + ' ' +(Number(str)+num);

// 곱셈, 나눗셈은 변수전환을 하지 않아도 됨//

//arrary
var a = [1,2,3,4,5 ];
//object 
// json (java script object notation)
var obj = {id: 'id01' , name='lee' , age = 10};
// funtion
var f = funtion(){ };
	return 333;
var type = typeof(f);
h2.innerHTML = type + '  ' +f( );
//java script도 객체지향적이다. //
};

</script>

<h1> JS02 Main </h1>
<h2 id  = "hh2"> </h2>

___________________________________

// js03 

js03 

<script>
window.onload = funtion(){
	var num1 = Math.min(0, 150, 30, 20, -8, -200); // returns -200
	var num2 = Math.max(0, 150, 30, 20, -8, -200); // returns 150
	var num3 = Math.random(); // returns a random number
	var num4 = Math.round(4.7); // returns 5
	var num5 = Math.round(4.4); // returns 4
	var num6 = Math.ceil(4.4); // returns 5
	var num7 = Math.floor(4.7); // returns 4
	var num8 = Math.floor(Math.random() * 11); 

	document.querySelector(#result').innerHTML = num1;
	document.querySelector(#result').innerHTML = num2;
	document.querySelector(#result').innerHTML = num3;
	document.querySelector(#result').innerHTML = num4;
	document.querySelector(#result').innerHTML = num5;
	document.querySelector(#result').innerHTML = num6;
	document.querySelector(#result').innerHTML = num7;
	document.querySelector(#result').innerHTML = num8;

	var txt = document.querySelector('#email').innerHTML;
	// alert(txt);
	var id = txt.substring(0,txt.indexOf('@'));
	var domain = txt.substring(txt.indexOf('@")+1, txt.indexOf('.'));

	document.querySelector('#id').innerHTML = id;
	document.querySelector('#domain').innerHTML = domain;

};
</script>
// 전체를 호출하고 그 중에서 특정값을 추출한다. //
<h1> JS03 Main </h1>
<h3 id = "result"> </h3>
<h4 id = "emil">yja@gmail.com</h4>
<h4 id = "id"></h4>
<h4 id = "domain"></h4>
___________________________________

// js04
js04

<style>
	#result{
		width:300px;
		border : 2px solid red;
	}
	#result > table{
	width :200px;
	border : 2px solid blue;
	}
</style>
<script>
function getdata() {
// 배열 안에 객체가 들어간다. -> JSON //
var a = [
	{id:'id01' , name: 'lee', age : 10},
	{id:'id02' , name: 'lee', age : 20},
	{id:'id03' , name: 'lee', age : 30},
	{id:'id04' , name: 'lee', age : 40},
	{id:'id05' , name: 'lee', age : 50}
	];
var txt = '';
	for (var i in a) {
	// var a 를 for문으로 돌려서 출력. //
	txt += '<h3>';
	txt += a[i].id+'   ' + a[i].name+'    ' +a[i].age;
	txt += '</h3>';

	};
	document.querySelector('#result').innerHTML = txt;

 } ;

/* 출력된 값을 아래와 같이 테이블로 만들어보자

var txt = '';
	txt +='<table id = "tb01">';	
	txt +='<thead>';
	txt +='<tr><th>ID</th><th>NAME</th><th>AGE</th></tr>;
	txt +='</thead>';
	txt +='<tbody>';

	
	for (var i in a) {
	// var a 를 for문으로 돌려서 출력. //
	txt += '<tr>';
	txt += '<h3>';

	txt += '<td>'a[i].id+'</td>';
	txt += '<td>'a[i].name+'</td>';
	txt += '<td>'a[i].domain+'</td>';
	txt += '</tr>';
		};
	txt +='</tbody>';
	txt +='</table>';

	document.querySelector('#result').innerHTML = txt;

 } ;
*/
</script>

<h1 JS04 Main</h1>
<h2> < a href="#"> Click</a></h2>
<div id = "result"></div>
___________________________________
js05
JS05

<script>
	function a(){ 
	return 'A';

};
	var b = function() { 

	return 'B';
};

	var b = function() {
	return 'BBB';
};
// var b함수는 오류가 나지 않는다, 두번째 b함수만 인식되어 'BBB';만 출력된다 //
// 단, var result =b(); 가 함수선언보다 먼저여선 안된다. 오류발생//

	var result =b();
	alert(result);
</script>

/*

<script>
// 함수 a (괄호) 괄호에는 타입을 쓰지 않는다. //
	function a(n){ 
	var result = n*1000;
	return result;

};
	var b = function(n,m) { 
	var result = n*m
	return result;
};

	
};	var result =b(100,222);
	alert(result);
</script>
	*/


/* java script에서만의 특수한 함수 사용기법

function c () {
return function( ){
return 100;
	};
 };

var r1 = c( );
//    ㄴ r1은 함수다 
var result2 = r1();
//alert(result2);

function d (f) {
 };
 	var dd = function() {
	return 100;
};
	var result3 = d(dd);
//	alert(result3); 
// 함수를 함수에 넣어준다. java script에서만 가능함 
*/
/* 특이한 함수, 화면이 로딩되면 display함수를 작동시킨다 
function display() { 

setInterval( function() { 
	var d = new Date();	
	var result = d.getHours() + '   ' +d.getMinutes() + '   ' +d.getSeconds();
	document.querySelector('#time').innerHTML = d. toString();
} , 1000 };
// java script에서 제공하는 함수 , 1000은 1초다. 1초에 1회씩 tf함수가 작동한다라는 뜻이다.

window.onload = function() {
display() ;
}; 

</script>
/*
<h1> JS05 Main </h1>
<h2 id ="time" </h2>
___________________________________
js06

<script>
function calc() {
	var txt = document.querySelector('#data').value;
	//alert (txt); 
	if(txt == '  ' || txt == null ) {
  	document.querySelector('#result').innerHTML = 'Bye';
	return;
};
/*
// 1+3 
var result =eval(txt);
if (!isFinite(result){
	result = 'Input Error .. '; }

//alert(result);
document.querySelector('#result').innerHTML = result;
document.querySelector('#data').value = ' ';
};
*/

</script>


<h1> JS06 Main </h1>

<input type = "text" id = "data">
<button onclick = "calc();"> Calc </button>
<h3 id = "result" </h3>
___________________________________